import 'dart:math';import 'package:flutter/material.dart';import 'package:intl/intl.dart';import 'package:otp_text_field/otp_field.dart';import 'package:otp_text_field/style.dart';import 'package:vendor/firebase/controller/auth_controller.dart';import 'package:vendor/utility/app_color.dart';import 'package:vendor/utility/app_const.dart';import 'package:vendor/view/auth/congratulation.dart';import 'package:vendor/view/auth/login.dart';import 'package:vendor/view_controller/appInput.dart';import 'package:vendor/view_controller/app_snackbar.dart';import 'package:vendor/view_controller/richText.dart';import '../../view_controller/appButton.dart';import '../../view_controller/bigText.dart';class SetPassword extends StatefulWidget {  final Map<String, dynamic> signUpData;  const SetPassword({Key? key, required this.signUpData}) : super(key: key);  @override  State<SetPassword> createState() => _SetPasswordState();}class _SetPasswordState extends State<SetPassword> {  final _passwordKey =GlobalKey<FormState>();  final password = TextEditingController();  final confirmPassword = TextEditingController();  var errorText;  @override  Widget build(BuildContext context) {    var size = MediaQuery.of(context).size;    return Scaffold(      backgroundColor: AppColors.bg,      body: Container(        width: size.width,        height: size.height,        decoration: BoxDecoration(            image: DecorationImage(                image: AssetImage("assets/images/map-bg.png")            )        ),        child: SingleChildScrollView(          padding: EdgeInsets.all(50),          child: Align(            alignment: Alignment.center,            child: Container(              width: size.width*.30,              padding: EdgeInsets.all(30),              margin: EdgeInsets.all(30),              decoration: BoxDecoration(                  color: Colors.white,                  borderRadius: BorderRadius.circular(5)              ),              child: Form(                key: _passwordKey,                child: Column(                  children: [                    Image.asset("assets/images/logo.png", height: 100, width: 100,),                    SizedBox(height: 40,),                    BigText(text: "Set Password"),                    SizedBox(height: 10,),                    Text("Now you need to set your login password.",                      style: TextStyle(                        fontWeight: FontWeight.w400,                        fontSize: 14,                      ),                    ),                    SizedBox(height: 40,),                    SizedBox(                      width: double.infinity,                      child: AppInput(                          controller: password,                          title: "Password",                          prefixIcon: Icons.key,                          hintText: "Password"                      ),                    ),                    SizedBox(height: 10,),                    SizedBox(                      width: double.infinity,                      child: AppInput(                          controller: confirmPassword,                          title: "Confirm Password",                          prefixIcon: Icons.key,                          hintText: "Confirm Password",                          onChange: (){                              if(password.text != confirmPassword.text){                                errorText = "Password do not match.";                              }else{                                errorText = null;                              }                          },                      ),                    ),                    SizedBox(height: 5,),                    errorText!=null? Text("$errorText",                      style: TextStyle(                        fontSize: 13,                        fontWeight: FontWeight.w400,                        fontStyle: FontStyle.italic,                      ),                    ):Center(),                    SizedBox(height: 30,),                    Align(                      alignment: Alignment.center,                      child: AppButton(                        width: size.width*.30,                        text: "Continue",                        isLoading: isLoading,                        onClick: ()=>_setPassword(),                      ),                    ),                    SizedBox(height: 15,),                    Center(                      child: TextButton(                        onPressed: ()=>Navigator.push(context, MaterialPageRoute(builder: (context)=>Login())),                        child: Text("I have an accout. Login."),                      ),                    )                  ],                ),              ),            ),          ),        ),      ),    );  }  bool isLoading = false;  _setPassword()async{    setState(() => isLoading = true);    var value =  Random();    var vendor_id = value.nextInt(900000) + 100000;    var todayDate = DateFormat("dd-MM-yyyy").format(DateTime.now());    var data = {      "vendor_id" : vendor_id.toString(),      "f_name" : widget.signUpData["f_name"],      "l_name" : widget.signUpData["l_name"],      "email" : widget.signUpData["email"],      "phone" : widget.signUpData["phone"],      "password" : password.text,      "company_name" : widget.signUpData["company_name"],      "years_in_business" : widget.signUpData["years_in_nusiness"],      "brief_company" : widget.signUpData["brief_company"],      "max_car": widget.signUpData["max_car"],      "selected_plan" : widget.signUpData["selected_plan"],      "id_prove" : null,      "business_license" : null,      "verify_email" : false,      "verify_phone" : false,      "verify_account" : false,      "admin_approve" : false,      "account_creation_date" : todayDate,      "account_verify_date" : null,      "role" : "vendor",    };     await FirebaseAuthController.vendorRegister(context: context, data: data);    setState(() => isLoading = false);  }}